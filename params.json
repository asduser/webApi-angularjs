{
  "name": "Webapi-angularjs",
  "tagline": "webApi client-side manager using Angular.js",
  "body": "## How to use\r\n\r\n1. Go to *webApi/categories/* directory.\r\n2. Create a new file, which will be responsible for some functional requests group to work with API. For example: if you have a lot of similar requests which contain some repeating code, just include them into appropriate category ( 'api/food/manage/{id}/delete', 'api/food/manage/{id}/update' -> *foodManage.js*).\r\n3. Fill each request using an existing template (see '*webApi/categories/account.js*' file).\r\n4. Then add your created constant name into '*webApi/categories-handler/requests.js*'.\r\n5. Now you may use new methods in application via special \"InvokeName\" parameter.\r\n6. To edit APi settings use *\"config/webApiSettings.js\"* file.\r\n\r\n## Samples\r\n\r\nDOMAIN: http://yourdomain.com/ \r\n\r\n### *** GET. Case #1 ***\r\n\r\n```javascript\r\n\r\n// url -> http://yourdomain.com/admin/news/\r\n\r\n// request\r\n{ Url: 'admin/news/', CustomOptions: false, Method: 'get', InvokeName: 'getNews' }\r\n\r\n// Invoke method.\r\nwebApi.getNews([]).success( // ...some actions...\r\n\r\n```\r\n\r\n### *** GET. Case #2 ***\r\n\r\n```javascript\r\n\r\n// url -> http://yourdomain.com/admin/news/3\r\n\r\n// Declare request.\r\n{ Url: 'admin/news/', CustomOptions: false, Method: 'get', InvokeName: 'getNewsDetailsById' }\r\n\r\n// Invoke method.\r\nwebApi.getNewsDetailsById([3]).success( // ...some actions...\r\n\r\n```\r\n\r\n### *** GET. Case #3 ***\r\n\r\n```javascript\r\n\r\n// url -> http://yourdomain.com/admin/news/3/title\r\n\r\n// Declare request.\r\n{ Url: 'admin/news/{id}/title', CustomOptions: false, Method: 'get', InvokeName: 'getNewsDetailsById' }\r\n\r\n// Invoke method.\r\nwebApi.getNewsDetailsById({\r\n  url: { id: 3}\r\n}).success( // ...some actions...\r\n\r\n```\r\n\r\n### *** GET. Case #4 ***\r\n\r\n```javascript\r\n\r\n// url -> http://yourdomain.com/admin/news/10?category=sport&period=week\r\n\r\n// Declare request.\r\n{ Url: 'admin/news', CustomOptions: false, Method: 'get', InvokeName: 'getNewsDetailsById' }\r\n\r\n// Invoke method and specify an appropriate arguments.\r\nwebApi.getNewsDetailsById({\r\n  before: ['10'],\r\n  after: { \"category\": \"sport\", \"period\": \"week\" }\r\n}).success( // ...some actions...\r\n\r\n```\r\n\r\n### *** DELETE. Case #1 ***\r\n\r\n```javascript\r\n\r\n// url -> http://yourdomain.com/admin/delete-user/10\r\n\r\n// Declare request.\r\n{ Url: 'admin/delete-user/{id}', CustomOptions: false, Method: 'delete', InvokeName: 'deleteUser' }\r\n\r\n// Invoke method.\r\nwebApi.updateUser({\r\n  url: { \"id\": 10 }\r\n}).success( // ...some actions...\r\n\r\n```\r\n\r\n### *** POST, PUT, UPDATE. Case #1 ***\r\n\r\n```javascript\r\n\r\n// url -> http://yourdomain.com/api/login\r\n// model -> { Login: \"test\", Password: \"test1\" }\r\n\r\n// Declare request.\r\n{ Url: 'api/login', CustomOptions: false, Method: 'post', InvokeName: 'login' }\r\n\r\n// Invoke method.\r\nvar request = {\r\n  Login: \"test\",\r\n  Password: \"test1\"\r\n};\r\nwebApi.login(request).success( // ...some actions...\r\n\r\n```\r\n\r\n### *** POST, PUT, UPDATE. Case #2 ***\r\n\r\n```javascript\r\n\r\n// url -> http://yourdomain.com/admin/manage/10/update\r\n// model -> { \"name\": \"Bob\", \"age\": 20 }\r\n\r\n// Declare request.\r\n{ Url: 'admin/manage/{id}/{action}', CustomOptions: false, Method: 'put', InvokeName: 'updateUser' }\r\n\r\n// Invoke method.\r\nwebApi.updateUser({\r\n  url: { \"id\": 10, \"action\": \"update\" },\r\n  data: { \"name\": \"Bob\", \"age\": 20 }\r\n}).success( // ...some actions...\r\n\r\n```\r\n\r\n### *** Sending a request options ***\r\n\r\nTo send a specific request options, foremost <u>CustomOptions: <b>true</b></u>. in \"<i>requests.js</i>\". Then use a following syntax:\r\nYou may specify there 'headers', 'responseType', 'timeout' etc. See https://docs.angularjs.org/api/ng/service/$http in section \"Arguments\" for details.\r\n\r\n<u>Case # 1.</u>\r\nInside array, the last argument - is an option object. <u>Example:</u> \r\n```javascript\r\nwebApi.getUserInfo([10, {\"headers\": {\"Content-Type\": \"text/plain\"} } ]);\r\n\r\n```\r\n\r\n<u>Case # 2.</u>\r\nIf using an object, just designate an appropriate field within request. <u>Example:</u> \r\n\r\n```javascript\r\nwebApi.login({\r\n  Login:'user',\r\n  Password: 'pass',\r\n  options: {\"timeout\": 100}\r\n});\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}